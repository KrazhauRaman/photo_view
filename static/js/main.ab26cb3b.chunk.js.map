{"version":3,"sources":["Components/Redux/Actions.js","Components/Redux/defaultValuesForReduser.js","Components/ServerRequest/GetPhotoes.js","Components/Redux/Sagas.js","Components/ViewModuleComponents/SettingsController.js","Components/ViewModuleComponents/PhotoElement.js","Components/ViewModule.js","Components/ListChangerComponents/PhotoControlItem.js","Components/ListChangerComponents/AddNewPhotoInput.js","Components/ListChanger.js","Components/pages.js","App.js","Components/Redux/Reducer.js","serviceWorker.js","index.js"],"names":["c","FETCH_PHOTO_URLS","SET_PHOTO_SIZE","SET_PHOTO_BORDER_RADIUS","UPDATE_NEW_INPUT_ID","SET_ARRAY_OF_USER_AVATARS","setArrayOfUserAvatars","newArr","type","arrayOfUserAvatars","fetchPhotoUrls","defaultValuesForReducer","photoSize","window","innerWidth","photoBorderRadius","id","url","newPhotoInput","getPhotoesUrls","fetch","concat","method","headers","content-type","accept","mode","then","result","json","watchFetchingPhotoUrls","regenerator_default","a","wrap","_context","prev","next","takeLatest","stop","_marked","this","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","userAvatar","_context2","select","state","Object","toConsumableArray","sent","undefined","Symbol","iterator","done","value","call","t0","return","finish","put","t1","console","log","_marked2","SettingsController","_this","react_default","createElement","className","min","max","step","props","onChange","el","setPhotoSize","currentTarget","htmlFor","setPhotoBorderRadius","Component","connect","store","dispatch","newValue","PhotoElement","style","height","width","src","alt","borderRadius","ViewModule","arrayOfPhotoElements","i","length","push","ViewModuleComponents_PhotoElement","key","ViewModuleComponents_SettingsController","Link","to","generateAllPhotoes","PhotoControlItem","newIds","splice","photoElementNumber","tempPlace","onClick","moveUp","bind","disabled","moveDown","deleteElement","AddNewPhotoInput","event","test","updateNewIdInput","setNewArray","reverse","placeholder","autoFocus","onKeyPress","onKeyPressHandler","onChangeHandler","onClickHandler","photoIds","ListChanger","ListChangerComponents_PhotoControlItem","ListChangerComponents_AddNewPhotoInput","generateAllPhotoElements","Home","Components_ViewModule","Changer","Components_ListChanger","sagaMiddleware","createSagaMiddleware","createStore","oldState","action","objectSpread","applyMiddleware","run","App","es","HashRouter","Switch","Route","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"wSACaA,EAAI,CACbC,iBAAkB,mBAClBC,eAAgB,iBAChBC,wBAAyB,0BACzBC,oBAAqB,sBACrBC,0BAA2B,6BAIlBC,EAAwB,SAACC,GAClC,MAAO,CACHC,KAAMR,EAAEK,0BACRI,mBAAoBF,IAkBfG,EAAiB,WAC1B,MAAO,CACHF,KAAMR,EAAEC,mBChCHU,EAA0B,CACnCC,UAAaC,OAAOC,WAAa,IAAOD,OAAOC,WAAa,IAC5DC,kBAAmB,EACnBN,mBAAoB,CAAC,CAAEO,GAAI,EAAGC,IAAK,IAAM,CAAED,GAAI,EAAGC,IAAK,IAAM,CAAED,GAAI,EAAGC,IAAK,IAAM,CAAED,GAAI,EAAGC,IAAK,IAAM,CAAED,GAAI,EAAGC,IAAK,IAAM,CAAED,GAAI,EAAGC,IAAK,KACvIC,cAAe,yCCLZ,SAASC,EAAeH,GAG3B,OAAOI,MAAK,sCAAAC,OAC8BL,GAEtC,CACIM,OAAQ,MACRC,QAAS,CACLC,eAAgB,mDAChBC,OAAU,oBAEdC,KAAM,SAETC,KAAK,SAAAC,GAAM,OAAIA,EAAOC,wBCTdC,cAMPpB,GANH,SAAUoB,IAAV,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACH,OADGF,EAAAE,KAAA,EACGC,YAAWrC,EAAEC,iBAAkBS,GADlC,wBAAAwB,EAAAI,SAAAC,EAAAC,MAMP,SAAU9B,IAAV,IAAAD,EAAAgC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAf,EAAAC,EAAAC,KAAA,SAAAc,GAAA,cAAAA,EAAAZ,KAAAY,EAAAX,MAAA,OAGmC,OAHnCW,EAAAZ,KAAA,EAAAY,EAAAX,KAAA,EAGyCY,YAAO,SAAAC,GAAK,OAAAC,OAAAC,EAAA,EAAAD,CAAQD,EAAMxC,sBAHnE,OAGcA,EAHdsC,EAAAK,KAAAX,GAAA,EAAAC,GAAA,EAAAC,OAAAU,EAAAN,EAAAZ,KAAA,EAAAS,EAK+BnC,EAL/B6C,OAAAC,YAAA,UAAAd,GAAAI,EAAAD,EAAAR,QAAAoB,KAAA,CAAAT,EAAAX,KAAA,YAMmC,MADlBU,EALjBD,EAAAY,OAM2BxC,IAN3B,CAAA8B,EAAAX,KAAA,SAOkC,OAPlCW,EAAAX,KAAA,GAOwCsB,YAAKvC,EAAgB2B,EAAW9B,IAPxE,QAOgB8B,EAAW7B,IAP3B8B,EAAAK,KAO6EnC,IAP7E,QAAAwB,GAAA,EAAAM,EAAAX,KAAA,gBAAAW,EAAAX,KAAA,iBAAAW,EAAAZ,KAAA,GAAAY,EAAAY,GAAAZ,EAAA,SAAAL,GAAA,EAAAC,EAAAI,EAAAY,GAAA,QAAAZ,EAAAZ,KAAA,GAAAY,EAAAZ,KAAA,GAAAM,GAAA,MAAAG,EAAAgB,QAAAhB,EAAAgB,SAAA,WAAAb,EAAAZ,KAAA,IAAAO,EAAA,CAAAK,EAAAX,KAAA,eAAAO,EAAA,eAAAI,EAAAc,OAAA,mBAAAd,EAAAc,OAAA,YAWQ,OAXRd,EAAAX,KAAA,GAWc0B,YAAI,CAAEtD,KAAMR,EAAEK,0BAA2BI,mBAAoBA,IAX3E,QAAAsC,EAAAX,KAAA,iBAcQ,OAdRW,EAAAZ,KAAA,GAAAY,EAAAgB,GAAAhB,EAAA,SAAAA,EAAAX,KAAA,GAcc4B,QAAQC,IAAI,gCAAZlB,EAAAgB,IAdd,yBAAAhB,EAAAT,SAAA4B,EAAA1B,KAAA,+DCLM2B,mLAEO,IAAAC,EAAA5B,KACL,OACI6B,EAAArC,EAAAsC,cAAA,OAAKC,UAAU,0BACXF,EAAArC,EAAAsC,cAAA,SAAO9D,KAAK,QAAQgE,IAAI,KAAKC,IAAM5D,OAAOC,WAAa,IAAOD,OAAOC,WAAa,IAAK4D,KAAK,IACxFjB,MAAOjB,KAAKmC,MAAM/D,UAAWgE,SAAU,SAAAC,GAAE,OAAIT,EAAKO,MAAMG,aAAaD,EAAGE,cAActB,UAC1FY,EAAArC,EAAAsC,cAAA,SAAOU,QAAQ,IAAf,SAAyBxC,KAAKmC,MAAM/D,WACpCyD,EAAArC,EAAAsC,cAAA,SAAO9D,KAAK,QAAQgE,IAAI,IAAIC,IAAI,KAAKC,KAAK,IACtCjB,MAAOjB,KAAKmC,MAAM5D,kBAAmB6D,SAAU,SAAAC,GAAE,OAAIT,EAAKO,MAAMM,qBAAqBJ,EAAGE,cAActB,UAC1GY,EAAArC,EAAAsC,cAAA,SAAOU,QAAQ,IAAf,WAA2BxC,KAAKmC,MAAM5D,2BAVrBmE,aA6BlBC,cAVU,SAAAC,GAAK,MAAK,CAC/BxE,UAAWwE,EAAMxE,UACjBG,kBAAmBqE,EAAMrE,oBAGN,SAAAsE,GAAQ,MAAK,CAChCP,aAAc,SAAAQ,GAAQ,OAAID,EJdF,SAACC,GACzB,MAAO,CACH9E,KAAMR,EAAEE,eACRU,UAAW0E,GIWoBR,CAAaQ,KAChDL,qBAAsB,SAAAK,GAAQ,OAAID,EJRF,SAACC,GACjC,MAAO,CACH9E,KAAMR,EAAEG,wBACRY,kBAAmBuE,GIKoBL,CAAqBK,OAGrDH,CAA0ChB,GC9BnDoB,mLAGE,OACIlB,EAAArC,EAAAsC,cAAA,OAAKC,UAAU,oBAAoBiB,MAAO,CAACC,OAAM,GAAApE,OAAImB,KAAKmC,MAAM/D,UAAf,MAA8B8E,MAAK,GAAArE,OAAImB,KAAKmC,MAAM/D,UAAf,QAChFyD,EAAArC,EAAAsC,cAAA,OAAKqB,IAAKnD,KAAKmC,MAAM1D,IAAK2E,IAAI,cAC1BH,OAAQjD,KAAKmC,MAAM/D,UAAW8E,MAAOlD,KAAKmC,MAAM/D,UAChD4E,MAAO,CAAEK,aAAY,GAAAxE,OAAKmB,KAAKmC,MAAM5D,kBAAhB,gBAPdmE,aAoBZC,cALU,SAAAC,GAAK,MAAK,CAC/BxE,UAAWwE,EAAMxE,UACjBG,kBAAmBqE,EAAMrE,oBAGY,KAA1BoE,CAAgCI,WChBzCO,8LAGEtD,KAAKmC,MAAMjE,8DASX,IAHA,IAAID,EAAqB+B,KAAKmC,MAAMlE,mBAChCsF,EAAuB,GAElBC,EAAI,EAAGA,EAAIvF,EAAmBwF,OAAQD,IAC3CD,EAAqBG,KAAK7B,EAAArC,EAAAsC,cAAC6B,EAAD,CAAcC,IAAKJ,EAAG/E,IAAKR,EAAmBuF,GAAG/E,OAG/E,OAAO8E,mCAKP,OACI1B,EAAArC,EAAAsC,cAAA,OAAKC,UAAU,mBACXF,EAAArC,EAAAsC,cAAA,OAAKC,UAAU,4BACXF,EAAArC,EAAAsC,cAAC+B,EAAD,MACAhC,EAAArC,EAAAsC,cAACgC,EAAA,EAAD,CAAMC,GAAG,aAAYlC,EAAArC,EAAAsC,cAAA,qCAEzBD,EAAArC,EAAAsC,cAAA,OAAKC,UAAU,2BACV/B,KAAKgE,8BA5BDtB,aA8CVC,cARU,SAAAC,GAAK,MAAK,CAC/B3E,mBAAoB2E,EAAM3E,qBAGP,SAAA4E,GAAQ,MAAK,CAChC3E,eAAgB,kBAAM2E,EAAS3E,QAGpByE,CAA0CW,GCjDnDW,0LAIE,IAAIC,EAAMxD,OAAAC,EAAA,EAAAD,CAAOV,KAAKmC,MAAMlE,oBAC5BiG,EAAOC,OAAOnE,KAAKmC,MAAMiC,mBAAoB,GAC7CpE,KAAKmC,MAAMrE,sBAAsBoG,oCAKjC,IAAIA,EAAMxD,OAAAC,EAAA,EAAAD,CAAOV,KAAKmC,MAAMlE,oBACxBoG,EAAYH,EAAOlE,KAAKmC,MAAMiC,oBAClCF,EAAOlE,KAAKmC,MAAMiC,oBAAsBF,EAAOlE,KAAKmC,MAAMiC,mBAAqB,GAC/EF,EAAOlE,KAAKmC,MAAMiC,mBAAqB,GAAKC,EAC5CrE,KAAKmC,MAAMrE,sBAAsBoG,sCAKjC,IAAIA,EAAMxD,OAAAC,EAAA,EAAAD,CAAOV,KAAKmC,MAAMlE,oBACxBoG,EAAYH,EAAOlE,KAAKmC,MAAMiC,oBAClCF,EAAOlE,KAAKmC,MAAMiC,oBAAsBF,EAAOlE,KAAKmC,MAAMiC,mBAAqB,GAC/EF,EAAOlE,KAAKmC,MAAMiC,mBAAqB,GAAKC,EAC5CrE,KAAKmC,MAAMrE,sBAAsBoG,oCAMjC,OACIrC,EAAArC,EAAAsC,cAAA,OAAKC,UAAU,0BACXF,EAAArC,EAAAsC,cAAA,UAAQC,UAAU,uBAAuBuC,QAAStE,KAAKuE,OAAOC,KAAKxE,MAAOyE,SAA6C,IAAlCzE,KAAKmC,MAAMiC,oBAAhG,aACAvC,EAAArC,EAAAsC,cAAA,UAAQC,UAAU,yBAAyBuC,QAAStE,KAAK0E,SAASF,KAAKxE,MAAOyE,SAAWzE,KAAKmC,MAAMiC,qBAAwBpE,KAAKmC,MAAMlE,mBAAmBwF,OAAS,GAAnK,eACA5B,EAAArC,EAAAsC,cAAA,OAAKC,UAAU,sBAAqBF,EAAArC,EAAAsC,cAAA,YAAO9B,KAAKmC,MAAMlE,mBAAmB+B,KAAKmC,MAAMiC,oBAAoB5F,KACxGqD,EAAArC,EAAAsC,cAAA,UAAQC,UAAU,wBAAwBuC,QAAStE,KAAK2E,cAAcH,KAAKxE,OAAO6B,EAAArC,EAAAsC,cAAA,KAAGC,UAAU,gBAA/F,sBAnCeW,aAoDhBC,cARU,SAAAC,GAAK,MAAK,CAC/B3E,mBAAoB2E,EAAM3E,qBAGP,SAAA4E,GAAQ,MAAK,CAChC/E,sBAAuB,SAAAC,GAAM,OAAI8E,EAAS/E,EAAsBC,OAGrD4E,CAA0CsB,GCpDnDW,0LAGcC,GAED,aAEJC,KAAKD,EAAMtC,cAActB,QAAwC,KAA9B4D,EAAMtC,cAActB,OAC1DjB,KAAKmC,MAAM4C,iBAAiBF,EAAMtC,cAActB,iDAKtC4D,GAEI,UAAdA,EAAMjB,KAAgD,KAA7B5D,KAAKmC,MAAMzD,eACpCsB,KAAKgF,uDAOwB,KAA7BhF,KAAKmC,MAAMzD,eACXsB,KAAKgF,oDAQT,IAAId,EAAMxD,OAAAC,EAAA,EAAAD,CAAOV,KAAKmC,MAAMlE,oBAE5BiG,EAAOe,UACPf,EAAOR,KAAK,CAAElF,IAAKwB,KAAKmC,MAAMzD,cAAeD,IAAK,KAClDyF,EAAOe,UAEPjF,KAAKmC,MAAMrE,sBAAsBoG,GACjClE,KAAKmC,MAAMjE,iBACX8B,KAAKmC,MAAM4C,iBAAiB,qCAIvB,IAAAnD,EAAA5B,KACL,OACI6B,EAAArC,EAAAsC,cAAA,OAAKC,UAAU,mBACXF,EAAArC,EAAAsC,cAAA,SAAOb,MAAOjB,KAAKmC,MAAMzD,cAAewG,YAAY,eAAelH,KAAK,SAASmH,WAAS,EACtFC,WAAY,SAAAP,GAAK,OAAIjD,EAAKyD,kBAAkBR,IAAQzC,SAAU,SAACyC,GAAD,OAAWjD,EAAK0D,gBAAgBT,MAClGhD,EAAArC,EAAAsC,cAAA,UAAQwC,QAAStE,KAAKuF,eAAef,KAAKxE,OAA1C,iBAjDe0C,aAsEhBC,cAZU,SAAAC,GAAK,MAAK,CAC/BlE,cAAekE,EAAMlE,cACrB8G,SAAU5C,EAAM4C,SAChBvH,mBAAoB2E,EAAM3E,qBAGP,SAAA4E,GAAQ,MAAK,CAChCkC,iBAAkB,SAAAjC,GAAQ,OAAID,ERlCF,SAACC,GAC7B,MAAO,CACH9E,KAAMR,EAAEI,oBACRc,cAAeoE,GQ+BoBiC,CAAiBjC,KACxDhF,sBAAuB,SAAAC,GAAM,OAAI8E,EAAS/E,EAAsBC,KAChEG,eAAgB,kBAAM2E,EAAS3E,QAGpByE,CAA0CiC,GCpEnDa,qMAQE,IAJA,IAAMxH,EAAqB+B,KAAKmC,MAAMlE,mBAElCsF,EAAuB,GAElBC,EAAI,EAAGA,EAAIvF,EAAmBwF,OAAQD,IAC3CD,EAAqBG,KAAK7B,EAAArC,EAAAsC,cAAC4D,EAAD,CAAkB9B,IAAKJ,EAAGY,mBAAoBZ,KAG5E,OAAOD,mCAIP,OACI1B,EAAArC,EAAAsC,cAAA,OAAKC,UAAU,oBACXF,EAAArC,EAAAsC,cAACgC,EAAA,EAAD,CAAMC,GAAG,IAAGlC,EAAArC,EAAAsC,cAAA,UAAQC,UAAU,kBAAiBF,EAAArC,EAAAsC,cAAA,KAAGC,UAAU,eAAhD,wBACZF,EAAArC,EAAAsC,cAAC6D,EAAD,MACC3F,KAAK4F,mCApBIlD,aAkCXC,cAJU,SAAAC,GAAK,MAAK,CAC/B3E,mBAAoB2E,EAAM3E,qBAGW,KAA1B0E,CAAgC8C,GCnClCI,EAAO,kBAChBhE,EAAArC,EAAAsC,cAAA,WAASC,UAAU,QACfF,EAAArC,EAAAsC,cAACgE,EAAD,QAGKC,EAAU,kBACnBlE,EAAArC,EAAAsC,cAAA,WAASC,UAAU,WACfF,EAAArC,EAAAsC,cAACkE,EAAD,QCDFC,EAAiBC,cACjBtD,EAAQuD,YCXP,SAAsBC,EAAUC,GAEnC,OAAQA,EAAOrI,MAEX,KAAKR,EAAEE,eAEH,OADkBgD,OAAA4F,EAAA,EAAA5F,CAAA,GAAQ0F,EAAR,CAAkBhI,UAAWiI,EAAOjI,YAI1D,KAAKZ,EAAEG,wBAEH,OADkB+C,OAAA4F,EAAA,EAAA5F,CAAA,GAAQ0F,EAAR,CAAkB7H,kBAAmB8H,EAAO9H,oBAIlE,KAAKf,EAAEI,oBAEH,OADkB8C,OAAA4F,EAAA,EAAA5F,CAAA,GAAQ0F,EAAR,CAAkB1H,cAAe2H,EAAO3H,gBAI9D,KAAKlB,EAAEK,0BAEH,OADkB6C,OAAA4F,EAAA,EAAA5F,CAAA,GAAQ0F,EAAR,CAAkBnI,mBAAoBoI,EAAOpI,qBAInE,QACI,OAAMmI,GAGC1F,OAAA4F,EAAA,EAAA5F,CAAA,GAAKvC,KDftBoI,YAAgBN,IAGlBA,EAAeO,IAAIlH,OAoBJmH,mLAhBX,OACE5E,EAAArC,EAAAsC,cAAC4E,EAAA,EAAD,CAAU9D,MAAOA,GACff,EAAArC,EAAAsC,cAAC6E,EAAA,EAAD,KACE9E,EAAArC,EAAAsC,cAAA,OAAKC,UAAU,YACbF,EAAArC,EAAAsC,cAAC8E,EAAA,EAAD,KACE/E,EAAArC,EAAAsC,cAAC+E,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWnB,IACjChE,EAAArC,EAAAsC,cAAC+E,EAAA,EAAD,CAAOE,KAAK,aAAaC,UAAWjB,IACpClE,EAAArC,EAAAsC,cAAC+E,EAAA,EAAD,CAAQG,UAAWnB,eATfnD,aETEuE,QACW,cAA7B5I,OAAO6I,SAASC,UAEe,UAA7B9I,OAAO6I,SAASC,UAEhB9I,OAAO6I,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOzF,EAAArC,EAAAsC,cAACyF,EAAD,MAASC,SAASC,eAAe,SDuH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMzI,KAAK,SAAA0I,GACjCA,EAAaC","file":"static/js/main.ab26cb3b.chunk.js","sourcesContent":["//типы забиты в константы, чтобы труднее было ошибиться при вводе \r\nexport const c = {\r\n    FETCH_PHOTO_URLS: \"FETCH_PHOTO_URLS\",\r\n    SET_PHOTO_SIZE: \"SET_PHOTO_SIZE\",\r\n    SET_PHOTO_BORDER_RADIUS: \"SET_PHOTO_BORDER_RADIUS\",\r\n    UPDATE_NEW_INPUT_ID: \"UPDATE_NEW_INPUT_ID\",\r\n    SET_ARRAY_OF_USER_AVATARS: \"SET_ARRAY_OF_USER_AVATARS\",    \r\n};\r\n\r\n\r\nexport const setArrayOfUserAvatars = (newArr) => {\r\n    return {\r\n        type: c.SET_ARRAY_OF_USER_AVATARS,\r\n        arrayOfUserAvatars: newArr,\r\n    };\r\n};\r\n\r\nexport const setPhotoSize = (newValue) => {\r\n    return {\r\n        type: c.SET_PHOTO_SIZE,\r\n        photoSize: newValue,\r\n    };\r\n};\r\n\r\nexport const setPhotoBorderRadius = (newValue) => {\r\n    return {\r\n        type: c.SET_PHOTO_BORDER_RADIUS,\r\n        photoBorderRadius: newValue,\r\n    };\r\n};\r\n\r\nexport const fetchPhotoUrls = () => {\r\n    return {\r\n        type: c.FETCH_PHOTO_URLS,\r\n    };\r\n};\r\n\r\nexport const updateNewIdInput = (newValue) => {\r\n    return {\r\n        type: c.UPDATE_NEW_INPUT_ID,\r\n        newPhotoInput: newValue,\r\n    };\r\n};","//дефолтные значения в редюсере\r\nexport const defaultValuesForReducer = {\r\n    photoSize: ((window.innerWidth < 400) ? window.innerWidth : 400),\r\n    photoBorderRadius: 0,\r\n    arrayOfUserAvatars: [{ id: 2, url: \"\" }, { id: 7, url: \"\" }, { id: 1, url: \"\" }, { id: 8, url: \"\" }, { id: 3, url: \"\" }, { id: 9, url: \"\" }],\r\n    newPhotoInput: \"\",\r\n}","export function getPhotoesUrls(id) {\r\n\r\n    //тут не особо понятно какие параметры были заданы на бэке, поэтмоу закинул околостандартные + преобразование в объект сразу тут делается, чтобы потом не потерять\r\n    return fetch(\r\n        `https://picurl.herokuapp.com/users/${id}`\r\n        ,\r\n        {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"content-type\": \"application/x-www-form-urlencoded; charset=UTF-8\",\r\n                \"accept\": \"application/json\",\r\n            },\r\n            mode: \"cors\",\r\n        })\r\n        .then(result => result.json());\r\n};\r\n","import { call, put, takeLatest, select } from 'redux-saga/effects';\r\nimport { c } from './Actions';\r\nimport { getPhotoesUrls } from '../ServerRequest/GetPhotoes';\r\n\r\n\r\nexport function* watchFetchingPhotoUrls() {\r\n    yield takeLatest(c.FETCH_PHOTO_URLS, fetchPhotoUrls);\r\n};\r\n\r\n//основная идея в том, чтобы не нагружать сервер и если у аватарки уже известен url, то не нужно слать запрос повторно\r\n//можно было б сохранить в localStorage вообще, но это уже совсем другая история\r\nfunction* fetchPhotoUrls() {\r\n    try {\r\n\r\n        const arrayOfUserAvatars = yield select(state => [...state.arrayOfUserAvatars]);\r\n\r\n        for (let userAvatar of arrayOfUserAvatars) {\r\n            if (userAvatar.url === \"\") {\r\n                userAvatar.url = (yield call(getPhotoesUrls, userAvatar.id)).url;\r\n            }\r\n        };\r\n\r\n        yield put({ type: c.SET_ARRAY_OF_USER_AVATARS, arrayOfUserAvatars: arrayOfUserAvatars });\r\n\r\n    } catch (error) {\r\n        yield console.log(\"Error on getting photoes data\", error);\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setPhotoSize, setPhotoBorderRadius } from \"../Redux/Actions\";\r\n\r\n\r\n//компонент, отвечающий за настройки аватарок (размер и радиус границы)\r\nclass SettingsController extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"setting-controller-div\">\r\n                <input type=\"range\" min=\"80\" max={(window.innerWidth < 400) ? window.innerWidth : 400} step=\"1\"\r\n                    value={this.props.photoSize} onChange={el => this.props.setPhotoSize(el.currentTarget.value)} />\r\n                <label htmlFor=\"\">Size: {this.props.photoSize}</label>\r\n                <input type=\"range\" min=\"0\" max=\"50\" step=\"1\"\r\n                    value={this.props.photoBorderRadius} onChange={el => this.props.setPhotoBorderRadius(el.currentTarget.value)} />\r\n                <label htmlFor=\"\">Radius: {this.props.photoBorderRadius}</label>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n/////////////// store //////////////\r\n\r\nconst getDataFromStore = store => ({\r\n    photoSize: store.photoSize,\r\n    photoBorderRadius: store.photoBorderRadius,\r\n});\r\n\r\nconst setDataToStore = dispatch => ({\r\n    setPhotoSize: newValue => dispatch(setPhotoSize(newValue)),\r\n    setPhotoBorderRadius: newValue => dispatch(setPhotoBorderRadius(newValue))\r\n});\r\n\r\nexport default connect(getDataFromStore, setDataToStore)(SettingsController);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n//компонент, отвечающий за аватарку\r\nclass PhotoElement extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"photo-element-div\" style={{height:`${this.props.photoSize}px`, width:`${this.props.photoSize}px`}}>\r\n                <img src={this.props.url} alt=\"Some avatar\"\r\n                    height={this.props.photoSize} width={this.props.photoSize}\r\n                    style={{ borderRadius: `${this.props.photoBorderRadius}%` }} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n/////////////// store //////////////\r\n\r\nconst getDataFromStore = store => ({\r\n    photoSize: store.photoSize,\r\n    photoBorderRadius: store.photoBorderRadius,\r\n});\r\n\r\nexport default connect(getDataFromStore, null)(PhotoElement);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport SettingsController from './ViewModuleComponents/SettingsController';\r\nimport PhotoElement from './ViewModuleComponents/PhotoElement';\r\nimport { fetchPhotoUrls } from \"./Redux/Actions\";\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n//компонент, отвечающий за страничку с аватарками\r\nclass ViewModule extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchPhotoUrls();\r\n    };\r\n\r\n\r\n    generateAllPhotoes() {\r\n\r\n        let arrayOfUserAvatars = this.props.arrayOfUserAvatars,\r\n            arrayOfPhotoElements = [];\r\n\r\n        for (let i = 0; i < arrayOfUserAvatars.length; i++) {\r\n            arrayOfPhotoElements.push(<PhotoElement key={i} url={arrayOfUserAvatars[i].url} />)\r\n        };\r\n\r\n        return arrayOfPhotoElements;\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"view-module-div\">\r\n                <div className=\"view-module-controls-div\">\r\n                    <SettingsController />\r\n                    <Link to=\"photolist\"><button>Edit avatars list</button></Link>\r\n                </div>\r\n                <div className=\"view-module-photoes-div\">\r\n                    {this.generateAllPhotoes()}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n/////////////// store //////////////\r\n\r\nconst getDataFromStore = store => ({\r\n    arrayOfUserAvatars: store.arrayOfUserAvatars,\r\n});\r\n\r\nconst setDataToStore = dispatch => ({\r\n    fetchPhotoUrls: () => dispatch(fetchPhotoUrls()),\r\n});\r\n\r\nexport default connect(getDataFromStore, setDataToStore)(ViewModule);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setArrayOfUserAvatars } from \"../Redux/Actions\";\r\n\r\n\r\n//компонент, отвечающий за строку управления юзером (удаление, смена места)\r\nclass PhotoControlItem extends Component {\r\n\r\n\r\n    deleteElement() {\r\n        let newIds = [...this.props.arrayOfUserAvatars];\r\n        newIds.splice(this.props.photoElementNumber, 1);\r\n        this.props.setArrayOfUserAvatars(newIds);\r\n    }\r\n\r\n\r\n    moveUp() {\r\n        let newIds = [...this.props.arrayOfUserAvatars];\r\n        let tempPlace = newIds[this.props.photoElementNumber];\r\n        newIds[this.props.photoElementNumber] = newIds[this.props.photoElementNumber - 1];\r\n        newIds[this.props.photoElementNumber - 1] = tempPlace;\r\n        this.props.setArrayOfUserAvatars(newIds);\r\n    }\r\n\r\n\r\n    moveDown() {\r\n        let newIds = [...this.props.arrayOfUserAvatars];\r\n        let tempPlace = newIds[this.props.photoElementNumber];\r\n        newIds[this.props.photoElementNumber] = newIds[this.props.photoElementNumber + 1];\r\n        newIds[this.props.photoElementNumber + 1] = tempPlace;\r\n        this.props.setArrayOfUserAvatars(newIds);\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"photo-control-item-div\">\r\n                <button className=\"photo-control-btn-up\" onClick={this.moveUp.bind(this)} disabled={(this.props.photoElementNumber === 0)}>&#x2191; Up</button>\r\n                <button className=\"photo-control-btn-down\" onClick={this.moveDown.bind(this)} disabled={(this.props.photoElementNumber === (this.props.arrayOfUserAvatars.length - 1))}>&#x2193; Down</button>\r\n                <div className=\"photo-control-span\"><span>{this.props.arrayOfUserAvatars[this.props.photoElementNumber].id}</span></div>\r\n                <button className=\"photo-control-btn-del\" onClick={this.deleteElement.bind(this)}><i className=\"fa fa-trash\" /> Delete</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n/////////////// store //////////////\r\n\r\nconst getDataFromStore = store => ({\r\n    arrayOfUserAvatars: store.arrayOfUserAvatars,\r\n});\r\n\r\nconst setDataToStore = dispatch => ({\r\n    setArrayOfUserAvatars: newArr => dispatch(setArrayOfUserAvatars(newArr)),\r\n});\r\n\r\nexport default connect(getDataFromStore, setDataToStore)(PhotoControlItem);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { updateNewIdInput, setArrayOfUserAvatars, fetchPhotoUrls } from \"../Redux/Actions\";\r\n\r\n\r\n//компонент, отвечающий за ввод и создание новых юзеров\r\nclass AddNewPhotoInput extends Component {\r\n\r\n\r\n    onChangeHandler(event) {\r\n\r\n        const re = /^[0-9\\b]+$/; //regExp со значениями 0-9, нужно чтоб проверять вводимые юзером данные (Id - положительные целые числа). \r\n\r\n        if (re.test(event.currentTarget.value) && event.currentTarget.value !== \"\") {\r\n            this.props.updateNewIdInput(event.currentTarget.value);\r\n        };\r\n    }\r\n\r\n\r\n    onKeyPressHandler(event) {\r\n\r\n        if (event.key === 'Enter' && this.props.newPhotoInput !== \"\") {\r\n            this.setNewArray();\r\n        };\r\n    }\r\n\r\n\r\n    onClickHandler() {\r\n\r\n        if (this.props.newPhotoInput !== \"\") {\r\n            this.setNewArray();\r\n        };\r\n    }\r\n    \r\n\r\n    //новые картинки закидываются в начало списка, после чего по списку пробегается сага (в редаксе) и докидывает отсутствующие urlы\r\n    setNewArray() {\r\n\r\n        let newIds = [...this.props.arrayOfUserAvatars];\r\n\r\n        newIds.reverse();\r\n        newIds.push({ id: +this.props.newPhotoInput, url: \"\" });\r\n        newIds.reverse();\r\n\r\n        this.props.setArrayOfUserAvatars(newIds);\r\n        this.props.fetchPhotoUrls();\r\n        this.props.updateNewIdInput(\"\");\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"new-photo-input\">\r\n                <input value={this.props.newPhotoInput} placeholder=\"Enter new ID\" type=\"number\" autoFocus\r\n                    onKeyPress={event => this.onKeyPressHandler(event)} onChange={(event) => this.onChangeHandler(event)} />\r\n                <button onClick={this.onClickHandler.bind(this)}>Enter</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n/////////////// store //////////////\r\n\r\nconst getDataFromStore = store => ({\r\n    newPhotoInput: store.newPhotoInput,\r\n    photoIds: store.photoIds,\r\n    arrayOfUserAvatars: store.arrayOfUserAvatars,\r\n});\r\n\r\nconst setDataToStore = dispatch => ({\r\n    updateNewIdInput: newValue => dispatch(updateNewIdInput(newValue)),\r\n    setArrayOfUserAvatars: newArr => dispatch(setArrayOfUserAvatars(newArr)),\r\n    fetchPhotoUrls: () => dispatch(fetchPhotoUrls()),\r\n});\r\n\r\nexport default connect(getDataFromStore, setDataToStore)(AddNewPhotoInput);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport PhotoControlItem from './ListChangerComponents/PhotoControlItem';\r\nimport AddNewPhotoInput from './ListChangerComponents/AddNewPhotoInput';\r\n\r\n\r\n//компонент, отвечающий за страничку настроек\r\nclass ListChanger extends Component {\r\n\r\n    generateAllPhotoElements() {\r\n\r\n        const arrayOfUserAvatars = this.props.arrayOfUserAvatars;\r\n\r\n        let arrayOfPhotoElements = [];\r\n\r\n        for (let i = 0; i < arrayOfUserAvatars.length; i++) {\r\n            arrayOfPhotoElements.push(<PhotoControlItem key={i} photoElementNumber={i} />);\r\n        };\r\n\r\n        return arrayOfPhotoElements;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"list-changer-div\">\r\n                <Link to=\"\"><button className=\"go-back-button\"><i className=\"fa fa-home\"/>   Go back</button></Link>\r\n                <AddNewPhotoInput />\r\n                {this.generateAllPhotoElements()}\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\n/////////////// store //////////////\r\n\r\nconst getDataFromStore = store => ({\r\n    arrayOfUserAvatars: store.arrayOfUserAvatars,\r\n});\r\n\r\nexport default connect(getDataFromStore, null)(ListChanger);","//константы для роутера\r\n\r\nimport React from 'react';\r\nimport ViewModule from './ViewModule';\r\nimport ListChanger from './ListChanger';\r\n\r\n\r\nexport const Home = () =>\r\n    <section className=\"home\">\r\n        <ViewModule />\r\n    </section>\r\n\r\nexport const Changer = () =>\r\n    <section className=\"changer\">\r\n        <ListChanger />\r\n    </section>","import React, { Component } from 'react';\nimport './App.css';\n\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { photoReducer } from './Components/Redux/Reducer';\nimport { watchFetchingPhotoUrls } from './Components/Redux/Sagas';\n\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport { Home, Changer } from './Components/pages';\n\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(\n  photoReducer,\n  applyMiddleware(sagaMiddleware)\n);\n\nsagaMiddleware.run(watchFetchingPhotoUrls);    \n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <HashRouter>\n          <div className=\"main-div\">\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route path=\"/photolist\" component={Changer} />\n              <Route  component={Home} />\n            </Switch>\n          </div>\n        </HashRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import { c } from './Actions';\r\nimport { defaultValuesForReducer } from './defaultValuesForReduser'\r\n\r\nexport function photoReducer(oldState, action) {\r\n\r\n    switch (action.type) {\r\n\r\n        case c.SET_PHOTO_SIZE: {\r\n            const updatedState = { ...oldState, photoSize: action.photoSize };\r\n            return updatedState;\r\n        }\r\n\r\n        case c.SET_PHOTO_BORDER_RADIUS: {\r\n            const updatedState = { ...oldState, photoBorderRadius: action.photoBorderRadius };\r\n            return updatedState;\r\n        }\r\n\r\n        case c.UPDATE_NEW_INPUT_ID: {\r\n            const updatedState = { ...oldState, newPhotoInput: action.newPhotoInput };\r\n            return updatedState;\r\n        }\r\n\r\n        case c.SET_ARRAY_OF_USER_AVATARS: {\r\n            const updatedState = { ...oldState, arrayOfUserAvatars: action.arrayOfUserAvatars };\r\n            return updatedState;\r\n        }\r\n\r\n        default:\r\n            if (!!oldState) {\r\n                return oldState;\r\n            };\r\n            return { ...defaultValuesForReducer };\r\n    }\r\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}